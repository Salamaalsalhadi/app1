# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JrNRysobMhVZYnyMLM-mrx8ENM4uL0d1
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Configure the Streamlit page
st.set_page_config(page_title="Hydrogen from Biomass Feedstock", layout="centered")

st.title("🌿 Biomass to Hydrogen Calculator")
st.markdown("Explore hydrogen and syngas output from different feedstocks 💨")

# Load CSV directly from the repo
@st.cache_data
def load_data():
    return pd.read_csv("feedstocks.csv")  # Make sure feedstocks.csv is in the same folder

df = load_data()

# Check for required columns
required_columns = ['Feedstock', 'H2', 'CO', 'CO2', 'CH4', 'Ash']
for col in required_columns:
    if col not in df.columns:
        st.error(f"❌ Missing column: {col} in feedstocks.csv")
        st.stop()

# Preprocess
df['Feedstock_Lower'] = df['Feedstock'].str.lower()

st.info("✅ Using built-in feedstock data from feedstocks.csv")

# User input
user_input = st.text_input("🔍 Enter feedstock name (e.g., 'rice', 'wood')").strip().lower()
temperature = st.slider("🌡️ Temperature (°C)", min_value=200, max_value=1000, value=900)
moisture = st.slider("💧 Moisture (%)", min_value=0, max_value=100, value=10)

if user_input:
    matches = df[df['Feedstock_Lower'].str.contains(user_input)]

    if matches.empty:
        st.warning("❌ No matching feedstock found.")
        st.info("💡 Try one of these: " + ", ".join(df['Feedstock'].unique()))
    else:
        selected = matches.iloc[0]
        feedstock_name = selected['Feedstock']

        try:
            h2 = float(selected['H2'])
            co = float(selected['CO'])
            co2 = float(selected['CO2'])
            ch4 = float(selected['CH4'])
            ash = float(selected['Ash'])
        except ValueError:
            st.error("❌ Invalid data in your CSV.")
            st.stop()

        hydrogen_output = h2 * (100 - moisture) / 100

        # Output info
        st.success(f"✅ Feedstock: **{feedstock_name}**")
        st.metric("💧 Estimated Hydrogen Output", f"{hydrogen_output:.2f} units")

        # Bar chart
        composition = pd.Series({
            'H2': h2,
            'CO': co,
            'CO2': co2,
            'CH4': ch4,
            'Ash': ash
        })

        st.subheader("🧪 Syngas Composition")
        fig, ax = plt.subplots()
        composition.plot(kind='bar', color=['skyblue', 'salmon', 'lightgreen', 'orange', 'gray'], ax=ax)
        ax.set_title(f"{feedstock_name} @ {temperature}°C, {moisture}% moisture")
        ax.set_ylabel("Percentage")
        st.pyplot(fig)