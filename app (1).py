# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JrNRysobMhVZYnyMLM-mrx8ENM4uL0d1
"""

import streamlit as st
import pandas as pd

st.set_page_config(page_title="Hydrogen from Biomass Feedstock", layout="centered")

st.title("🌿 Biomass to Hydrogen Calculator")
st.markdown("Upload your feedstock CSV, choose a feedstock, and see the gas output 💨")

uploaded_file = st.file_uploader("📄 Upload your feedstocks.csv", type=["csv"])

if uploaded_file:
    try:
        df = pd.read_csv(uploaded_file)

        required_columns = ['Feedstock', 'H2', 'CO', 'CO2', 'CH4', 'Ash']
        for col in required_columns:
            if col not in df.columns:
                st.error(f"❌ Missing column: {col}")
                st.stop()

        df['Feedstock_Lower'] = df['Feedstock'].str.lower()

        user_input = st.text_input("🔎 Enter feedstock name (e.g., 'rice', 'wood')").strip().lower()
        temperature = st.slider("🌡️ Temperature (°C)", min_value=200, max_value=1000, value=900)
        moisture = st.slider("💧 Moisture (%)", min_value=0, max_value=100, value=10)

        if user_input:
            matches = df[df['Feedstock_Lower'].str.contains(user_input)]

            if matches.empty:
                st.warning("❌ No matching feedstock found.")
                st.info("💡 Try one of these: " + ", ".join(df['Feedstock'].unique()))
            else:
                selected = matches.iloc[0]
                feedstock_name = selected['Feedstock']

                try:
                    h2 = float(selected['H2'])
                    co = float(selected['CO'])
                    co2 = float(selected['CO2'])
                    ch4 = float(selected['CH4'])
                    ash = float(selected['Ash'])
                except ValueError:
                    st.error("❌ Invalid data in your CSV.")
                    st.stop()

                hydrogen_output = h2 * (100 - moisture) / 100

                st.success(f"✅ Feedstock: **{feedstock_name}**")
                st.metric("💧 Estimated Hydrogen Output", f"{hydrogen_output:.2f} units")

                st.subheader("🧪 Syngas Composition")

                chart_data = pd.DataFrame({
                    'Component': ['H2', 'CO', 'CO2', 'CH4', 'Ash'],
                    'Percentage': [h2, co, co2, ch4, ash]
                })

                st.bar_chart(chart_data.set_index('Component'))

    except Exception as e:
        st.error(f"⚠️ Error: {str(e)}")
else:
    st.info("👆 Please upload your feedstocks CSV file to begin.")